2023-03-25 21:58:23,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-25 21:58:23,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-25 21:58:23,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-25 21:58:23,851:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-25 21:58:25,068:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-25 21:58:25,289:INFO:Initializing load_model()
2023-03-25 21:58:25,289:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-25 21:58:25,294:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-25 21:58:25,295:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-25 21:58:25,296:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-25 21:58:25,298:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-25 21:58:48,226:INFO:Initializing predict_model()
2023-03-25 21:58:48,226:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002037A0C2688>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002037B562DC8>)
2023-03-25 21:58:48,226:INFO:Checking exceptions
2023-03-25 21:58:48,226:INFO:Preloading libraries
2023-03-25 21:58:48,226:INFO:Set up data.
2023-03-25 21:58:48,259:INFO:Set up index.
2023-03-25 21:59:37,977:INFO:Initializing predict_model()
2023-03-25 21:59:37,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002037B52CDC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002037B567F78>)
2023-03-25 21:59:37,978:INFO:Checking exceptions
2023-03-25 21:59:37,978:INFO:Preloading libraries
2023-03-25 21:59:37,978:INFO:Set up data.
2023-03-25 21:59:38,006:INFO:Set up index.
2023-03-25 22:00:29,729:INFO:Initializing predict_model()
2023-03-25 22:00:29,729:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002037B52EC08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020370CE1318>)
2023-03-25 22:00:29,730:INFO:Checking exceptions
2023-03-25 22:00:29,730:INFO:Preloading libraries
2023-03-25 22:00:29,730:INFO:Set up data.
2023-03-25 22:00:29,755:INFO:Set up index.
2023-03-25 22:00:56,263:INFO:Initializing predict_model()
2023-03-25 22:00:56,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002037B5AC808>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000020370CF05E8>)
2023-03-25 22:00:56,263:INFO:Checking exceptions
2023-03-25 22:00:56,263:INFO:Preloading libraries
2023-03-25 22:00:56,264:INFO:Set up data.
2023-03-25 22:00:56,293:INFO:Set up index.
2023-03-26 11:29:11,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 11:29:11,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 11:29:11,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 11:29:11,732:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-26 11:29:13,677:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-26 11:29:14,295:INFO:Initializing load_model()
2023-03-26 11:29:14,295:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-26 11:29:14,305:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-26 11:29:14,310:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-26 11:29:14,312:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-26 11:29:14,312:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-26 11:29:26,222:INFO:Initializing predict_model()
2023-03-26 11:29:26,222:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487D9088C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F2000D8>)
2023-03-26 11:29:26,222:INFO:Checking exceptions
2023-03-26 11:29:26,222:INFO:Preloading libraries
2023-03-26 11:29:26,222:INFO:Set up data.
2023-03-26 11:29:26,294:INFO:Set up index.
2023-03-26 11:35:08,722:INFO:Initializing predict_model()
2023-03-26 11:35:08,730:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F2542C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487D90B5E8>)
2023-03-26 11:35:08,730:INFO:Checking exceptions
2023-03-26 11:35:08,730:INFO:Preloading libraries
2023-03-26 11:35:08,730:INFO:Set up data.
2023-03-26 11:35:08,778:INFO:Set up index.
2023-03-26 11:35:09,052:INFO:Initializing predict_model()
2023-03-26 11:35:09,052:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487340ABC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487D913318>)
2023-03-26 11:35:09,052:INFO:Checking exceptions
2023-03-26 11:35:09,052:INFO:Preloading libraries
2023-03-26 11:35:09,060:INFO:Set up data.
2023-03-26 11:35:09,100:INFO:Set up index.
2023-03-26 11:35:40,164:INFO:Initializing predict_model()
2023-03-26 11:35:40,164:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487EF375C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000024873394948>)
2023-03-26 11:35:40,164:INFO:Checking exceptions
2023-03-26 11:35:40,164:INFO:Preloading libraries
2023-03-26 11:35:40,164:INFO:Set up data.
2023-03-26 11:35:40,229:INFO:Set up index.
2023-03-26 11:35:40,505:INFO:Initializing predict_model()
2023-03-26 11:35:40,505:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487340D208>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F261AF8>)
2023-03-26 11:35:40,505:INFO:Checking exceptions
2023-03-26 11:35:40,505:INFO:Preloading libraries
2023-03-26 11:35:40,505:INFO:Set up data.
2023-03-26 11:35:40,561:INFO:Set up index.
2023-03-26 11:37:19,661:INFO:Initializing predict_model()
2023-03-26 11:37:19,661:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F239048>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F1A7828>)
2023-03-26 11:37:19,661:INFO:Checking exceptions
2023-03-26 11:37:19,661:INFO:Preloading libraries
2023-03-26 11:37:19,661:INFO:Set up data.
2023-03-26 11:37:19,725:INFO:Set up index.
2023-03-26 11:37:20,014:INFO:Initializing predict_model()
2023-03-26 11:37:20,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487EEF0148>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F24B4C8>)
2023-03-26 11:37:20,014:INFO:Checking exceptions
2023-03-26 11:37:20,014:INFO:Preloading libraries
2023-03-26 11:37:20,019:INFO:Set up data.
2023-03-26 11:37:20,063:INFO:Set up index.
2023-03-26 11:39:41,339:INFO:Initializing predict_model()
2023-03-26 11:39:41,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F1C3F48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F1A11F8>)
2023-03-26 11:39:41,339:INFO:Checking exceptions
2023-03-26 11:39:41,339:INFO:Preloading libraries
2023-03-26 11:39:41,339:INFO:Set up data.
2023-03-26 11:39:41,403:INFO:Set up index.
2023-03-26 11:41:09,455:INFO:Initializing predict_model()
2023-03-26 11:41:09,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F245A08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487D90B5E8>)
2023-03-26 11:41:09,455:INFO:Checking exceptions
2023-03-26 11:41:09,455:INFO:Preloading libraries
2023-03-26 11:41:09,455:INFO:Set up data.
2023-03-26 11:41:09,487:INFO:Set up index.
2023-03-26 11:42:03,742:INFO:Initializing predict_model()
2023-03-26 11:42:03,742:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F239B08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000024873424C18>)
2023-03-26 11:42:03,742:INFO:Checking exceptions
2023-03-26 11:42:03,742:INFO:Preloading libraries
2023-03-26 11:42:03,742:INFO:Set up data.
2023-03-26 11:42:03,791:INFO:Set up index.
2023-03-26 11:42:04,055:INFO:Initializing predict_model()
2023-03-26 11:42:04,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F1C6E48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F175CA8>)
2023-03-26 11:42:04,055:INFO:Checking exceptions
2023-03-26 11:42:04,055:INFO:Preloading libraries
2023-03-26 11:42:04,055:INFO:Set up data.
2023-03-26 11:42:04,119:INFO:Set up index.
2023-03-26 11:44:27,284:INFO:Initializing predict_model()
2023-03-26 11:44:27,284:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487EE5B0C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487EEE2DC8>)
2023-03-26 11:44:27,284:INFO:Checking exceptions
2023-03-26 11:44:27,284:INFO:Preloading libraries
2023-03-26 11:44:27,284:INFO:Set up data.
2023-03-26 11:44:27,340:INFO:Set up index.
2023-03-26 11:44:27,607:INFO:Initializing predict_model()
2023-03-26 11:44:27,607:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F17C708>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F261DC8>)
2023-03-26 11:44:27,607:INFO:Checking exceptions
2023-03-26 11:44:27,607:INFO:Preloading libraries
2023-03-26 11:44:27,607:INFO:Set up data.
2023-03-26 11:44:27,671:INFO:Set up index.
2023-03-26 11:45:30,241:INFO:Initializing predict_model()
2023-03-26 11:45:30,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F2EC708>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000248735171F8>)
2023-03-26 11:45:30,241:INFO:Checking exceptions
2023-03-26 11:45:30,241:INFO:Preloading libraries
2023-03-26 11:45:30,241:INFO:Set up data.
2023-03-26 11:45:30,298:INFO:Set up index.
2023-03-26 11:45:30,566:INFO:Initializing predict_model()
2023-03-26 11:45:30,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487F1C6FC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487351F1F8>)
2023-03-26 11:45:30,566:INFO:Checking exceptions
2023-03-26 11:45:30,566:INFO:Preloading libraries
2023-03-26 11:45:30,574:INFO:Set up data.
2023-03-26 11:45:30,630:INFO:Set up index.
2023-03-26 11:46:07,508:INFO:Initializing predict_model()
2023-03-26 11:46:07,508:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002487EFDF048>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002487F24B0D8>)
2023-03-26 11:46:07,508:INFO:Checking exceptions
2023-03-26 11:46:07,508:INFO:Preloading libraries
2023-03-26 11:46:07,508:INFO:Set up data.
2023-03-26 11:46:07,565:INFO:Set up index.
2023-03-27 09:20:15,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 09:20:15,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 09:20:15,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 09:20:15,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 09:20:18,641:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-27 09:20:19,494:INFO:Initializing load_model()
2023-03-27 09:20:19,494:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-27 09:20:19,510:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 09:20:19,510:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 09:20:19,516:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 09:20:19,518:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-27 09:20:31,334:INFO:Initializing predict_model()
2023-03-27 09:20:31,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEA2188>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AECF4C8>)
2023-03-27 09:20:31,334:INFO:Checking exceptions
2023-03-27 09:20:31,334:INFO:Preloading libraries
2023-03-27 09:20:31,334:INFO:Set up data.
2023-03-27 09:20:31,423:INFO:Set up index.
2023-03-27 09:21:38,919:INFO:Initializing predict_model()
2023-03-27 09:21:38,919:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D7895D7F48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AED2678>)
2023-03-27 09:21:38,919:INFO:Checking exceptions
2023-03-27 09:21:38,919:INFO:Preloading libraries
2023-03-27 09:21:38,919:INFO:Set up data.
2023-03-27 09:21:38,975:INFO:Set up index.
2023-03-27 09:36:25,619:INFO:Initializing predict_model()
2023-03-27 09:36:25,619:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D786B66D88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AED6AF8>)
2023-03-27 09:36:25,627:INFO:Checking exceptions
2023-03-27 09:36:25,628:INFO:Preloading libraries
2023-03-27 09:36:25,628:INFO:Set up data.
2023-03-27 09:36:25,699:INFO:Set up index.
2023-03-27 09:36:26,877:INFO:Initializing predict_model()
2023-03-27 09:36:26,877:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D7FEF936C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE51318>)
2023-03-27 09:36:26,877:INFO:Checking exceptions
2023-03-27 09:36:26,877:INFO:Preloading libraries
2023-03-27 09:36:26,877:INFO:Set up data.
2023-03-27 09:36:26,952:INFO:Set up index.
2023-03-27 09:36:27,085:INFO:Initializing predict_model()
2023-03-27 09:36:27,085:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D788F51C88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE51708>)
2023-03-27 09:36:27,085:INFO:Checking exceptions
2023-03-27 09:36:27,085:INFO:Preloading libraries
2023-03-27 09:36:27,085:INFO:Set up data.
2023-03-27 09:36:27,189:INFO:Set up index.
2023-03-27 09:36:27,420:INFO:Initializing predict_model()
2023-03-27 09:36:27,420:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE5C648>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF3EC18>)
2023-03-27 09:36:27,434:INFO:Checking exceptions
2023-03-27 09:36:27,434:INFO:Preloading libraries
2023-03-27 09:36:27,434:INFO:Set up data.
2023-03-27 09:36:27,715:INFO:Set up index.
2023-03-27 09:36:28,266:INFO:Initializing predict_model()
2023-03-27 09:36:28,436:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF9D708>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF3ECA8>)
2023-03-27 09:36:28,436:INFO:Checking exceptions
2023-03-27 09:36:28,436:INFO:Preloading libraries
2023-03-27 09:36:28,436:INFO:Set up data.
2023-03-27 09:36:28,444:INFO:Initializing predict_model()
2023-03-27 09:36:28,444:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF29888>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF3EDC8>)
2023-03-27 09:36:28,452:INFO:Checking exceptions
2023-03-27 09:36:28,476:INFO:Preloading libraries
2023-03-27 09:36:28,485:INFO:Set up data.
2023-03-27 09:36:28,533:INFO:Initializing predict_model()
2023-03-27 09:36:28,533:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78ABAA548>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE79318>)
2023-03-27 09:36:28,533:INFO:Checking exceptions
2023-03-27 09:36:28,533:INFO:Preloading libraries
2023-03-27 09:36:28,533:INFO:Set up data.
2023-03-27 09:36:28,688:INFO:Set up index.
2023-03-27 09:36:28,704:INFO:Set up index.
2023-03-27 09:36:28,830:INFO:Set up index.
2023-03-27 09:39:25,559:INFO:Initializing predict_model()
2023-03-27 09:39:25,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEF3E08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AED6A68>)
2023-03-27 09:39:25,559:INFO:Checking exceptions
2023-03-27 09:39:25,559:INFO:Preloading libraries
2023-03-27 09:39:25,559:INFO:Set up data.
2023-03-27 09:39:25,591:INFO:Set up index.
2023-03-27 09:40:07,937:INFO:Initializing predict_model()
2023-03-27 09:40:07,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF1BC48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF62168>)
2023-03-27 09:40:07,937:INFO:Checking exceptions
2023-03-27 09:40:07,937:INFO:Preloading libraries
2023-03-27 09:40:07,937:INFO:Set up data.
2023-03-27 09:40:07,961:INFO:Set up index.
2023-03-27 09:40:14,114:INFO:Initializing predict_model()
2023-03-27 09:40:14,114:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF09988>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF62288>)
2023-03-27 09:40:14,114:INFO:Checking exceptions
2023-03-27 09:40:14,114:INFO:Preloading libraries
2023-03-27 09:40:14,114:INFO:Set up data.
2023-03-27 09:40:14,146:INFO:Set up index.
2023-03-27 09:40:36,198:INFO:Initializing predict_model()
2023-03-27 09:40:36,198:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78ABA7CC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AECF4C8>)
2023-03-27 09:40:36,198:INFO:Checking exceptions
2023-03-27 09:40:36,198:INFO:Preloading libraries
2023-03-27 09:40:36,198:INFO:Set up data.
2023-03-27 09:40:36,231:INFO:Set up index.
2023-03-27 09:41:01,893:INFO:Initializing predict_model()
2023-03-27 09:41:01,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF2ABC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE511F8>)
2023-03-27 09:41:01,893:INFO:Checking exceptions
2023-03-27 09:41:01,893:INFO:Preloading libraries
2023-03-27 09:41:01,893:INFO:Set up data.
2023-03-27 09:41:01,998:INFO:Set up index.
2023-03-27 10:04:26,124:INFO:Initializing predict_model()
2023-03-27 10:04:26,124:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE4ECC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF388B8>)
2023-03-27 10:04:26,124:INFO:Checking exceptions
2023-03-27 10:04:26,124:INFO:Preloading libraries
2023-03-27 10:04:26,131:INFO:Set up data.
2023-03-27 10:04:26,157:INFO:Set up index.
2023-03-27 10:05:22,930:INFO:Initializing predict_model()
2023-03-27 10:05:22,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78ABAA508>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE515E8>)
2023-03-27 10:05:22,930:INFO:Checking exceptions
2023-03-27 10:05:22,930:INFO:Preloading libraries
2023-03-27 10:05:22,930:INFO:Set up data.
2023-03-27 10:05:22,954:INFO:Set up index.
2023-03-27 10:07:46,210:INFO:Initializing predict_model()
2023-03-27 10:07:46,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEA6C88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D7FF09F318>)
2023-03-27 10:07:46,210:INFO:Checking exceptions
2023-03-27 10:07:46,210:INFO:Preloading libraries
2023-03-27 10:07:46,210:INFO:Set up data.
2023-03-27 10:07:46,250:INFO:Set up index.
2023-03-27 10:08:31,526:INFO:Initializing predict_model()
2023-03-27 10:08:31,526:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEA6108>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFD798>)
2023-03-27 10:08:31,526:INFO:Checking exceptions
2023-03-27 10:08:31,526:INFO:Preloading libraries
2023-03-27 10:08:31,526:INFO:Set up data.
2023-03-27 10:08:31,591:INFO:Set up index.
2023-03-27 10:08:32,363:INFO:Initializing predict_model()
2023-03-27 10:08:32,363:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D7FFAFFB48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFD828>)
2023-03-27 10:08:32,363:INFO:Checking exceptions
2023-03-27 10:08:32,363:INFO:Preloading libraries
2023-03-27 10:08:32,363:INFO:Set up data.
2023-03-27 10:08:32,395:INFO:Set up index.
2023-03-27 10:08:32,539:INFO:Initializing predict_model()
2023-03-27 10:08:32,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF95F48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38708>)
2023-03-27 10:08:32,539:INFO:Checking exceptions
2023-03-27 10:08:32,539:INFO:Preloading libraries
2023-03-27 10:08:32,539:INFO:Set up data.
2023-03-27 10:08:32,563:INFO:Set up index.
2023-03-27 10:08:32,716:INFO:Initializing predict_model()
2023-03-27 10:08:32,716:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE4E508>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE71F78>)
2023-03-27 10:08:32,716:INFO:Checking exceptions
2023-03-27 10:08:32,716:INFO:Preloading libraries
2023-03-27 10:08:32,716:INFO:Set up data.
2023-03-27 10:08:32,748:INFO:Set up index.
2023-03-27 10:08:32,893:INFO:Initializing predict_model()
2023-03-27 10:08:32,893:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D788F50088>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF388B8>)
2023-03-27 10:08:32,893:INFO:Checking exceptions
2023-03-27 10:08:32,893:INFO:Preloading libraries
2023-03-27 10:08:32,893:INFO:Set up data.
2023-03-27 10:08:32,925:INFO:Set up index.
2023-03-27 10:08:33,078:INFO:Initializing predict_model()
2023-03-27 10:08:33,078:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D788E24488>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE515E8>)
2023-03-27 10:08:33,078:INFO:Checking exceptions
2023-03-27 10:08:33,078:INFO:Preloading libraries
2023-03-27 10:08:33,078:INFO:Set up data.
2023-03-27 10:08:33,111:INFO:Set up index.
2023-03-27 10:08:33,319:INFO:Initializing predict_model()
2023-03-27 10:08:33,319:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE4E208>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE71F78>)
2023-03-27 10:08:33,319:INFO:Checking exceptions
2023-03-27 10:08:33,319:INFO:Preloading libraries
2023-03-27 10:08:33,319:INFO:Set up data.
2023-03-27 10:08:33,360:INFO:Initializing predict_model()
2023-03-27 10:08:33,376:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF82808>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38708>)
2023-03-27 10:08:33,384:INFO:Checking exceptions
2023-03-27 10:08:33,384:INFO:Preloading libraries
2023-03-27 10:08:33,384:INFO:Set up data.
2023-03-27 10:08:33,401:INFO:Set up index.
2023-03-27 10:08:33,425:INFO:Set up index.
2023-03-27 10:08:33,706:INFO:Initializing predict_model()
2023-03-27 10:08:33,706:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE5A508>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE51708>)
2023-03-27 10:08:33,706:INFO:Checking exceptions
2023-03-27 10:08:33,714:INFO:Preloading libraries
2023-03-27 10:08:33,720:INFO:Set up data.
2023-03-27 10:08:33,804:INFO:Set up index.
2023-03-27 10:08:33,862:INFO:Initializing predict_model()
2023-03-27 10:08:33,862:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE5AD08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFD168>)
2023-03-27 10:08:33,862:INFO:Checking exceptions
2023-03-27 10:08:33,862:INFO:Preloading libraries
2023-03-27 10:08:33,862:INFO:Set up data.
2023-03-27 10:08:34,017:INFO:Set up index.
2023-03-27 10:08:34,034:INFO:Initializing predict_model()
2023-03-27 10:08:34,042:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78B0197C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFDEE8>)
2023-03-27 10:08:34,058:INFO:Checking exceptions
2023-03-27 10:08:34,058:INFO:Preloading libraries
2023-03-27 10:08:34,058:INFO:Set up data.
2023-03-27 10:08:34,163:INFO:Set up index.
2023-03-27 10:08:34,406:INFO:Initializing predict_model()
2023-03-27 10:08:34,406:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF11E88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFD4C8>)
2023-03-27 10:08:34,414:INFO:Checking exceptions
2023-03-27 10:08:34,414:INFO:Preloading libraries
2023-03-27 10:08:34,414:INFO:Set up data.
2023-03-27 10:08:34,826:INFO:Set up index.
2023-03-27 10:08:57,336:INFO:Initializing predict_model()
2023-03-27 10:08:57,336:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AFAF4C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D7FEFD4048>)
2023-03-27 10:08:57,336:INFO:Checking exceptions
2023-03-27 10:08:57,336:INFO:Preloading libraries
2023-03-27 10:08:57,336:INFO:Set up data.
2023-03-27 10:08:57,376:INFO:Set up index.
2023-03-27 10:11:42,180:INFO:Initializing predict_model()
2023-03-27 10:11:42,180:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF00AC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38CA8>)
2023-03-27 10:11:42,180:INFO:Checking exceptions
2023-03-27 10:11:42,180:INFO:Preloading libraries
2023-03-27 10:11:42,180:INFO:Set up data.
2023-03-27 10:11:42,237:INFO:Set up index.
2023-03-27 10:12:34,640:INFO:Initializing predict_model()
2023-03-27 10:12:34,640:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AFDCE48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D7FF09F318>)
2023-03-27 10:12:34,640:INFO:Checking exceptions
2023-03-27 10:12:34,640:INFO:Preloading libraries
2023-03-27 10:12:34,640:INFO:Set up data.
2023-03-27 10:12:34,689:INFO:Set up index.
2023-03-27 10:31:45,223:INFO:Initializing predict_model()
2023-03-27 10:31:45,223:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF0A148>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE44CA8>)
2023-03-27 10:31:45,223:INFO:Checking exceptions
2023-03-27 10:31:45,223:INFO:Preloading libraries
2023-03-27 10:31:45,223:INFO:Set up data.
2023-03-27 10:31:45,287:INFO:Set up index.
2023-03-27 10:32:16,329:INFO:Initializing predict_model()
2023-03-27 10:32:16,329:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF083C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38B88>)
2023-03-27 10:32:16,329:INFO:Checking exceptions
2023-03-27 10:32:16,329:INFO:Preloading libraries
2023-03-27 10:32:16,337:INFO:Set up data.
2023-03-27 10:32:16,433:INFO:Set up index.
2023-03-27 10:33:36,036:INFO:Initializing predict_model()
2023-03-27 10:33:36,036:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF4CC08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AE511F8>)
2023-03-27 10:33:36,036:INFO:Checking exceptions
2023-03-27 10:33:36,036:INFO:Preloading libraries
2023-03-27 10:33:36,036:INFO:Set up data.
2023-03-27 10:33:36,076:INFO:Set up index.
2023-03-27 10:34:04,353:INFO:Initializing predict_model()
2023-03-27 10:34:04,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEA6788>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AEFDCA8>)
2023-03-27 10:34:04,353:INFO:Checking exceptions
2023-03-27 10:34:04,353:INFO:Preloading libraries
2023-03-27 10:34:04,353:INFO:Set up data.
2023-03-27 10:34:04,417:INFO:Set up index.
2023-03-27 10:36:58,536:INFO:Initializing predict_model()
2023-03-27 10:36:58,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AF72B48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF3F3A8>)
2023-03-27 10:36:58,536:INFO:Checking exceptions
2023-03-27 10:36:58,536:INFO:Preloading libraries
2023-03-27 10:36:58,536:INFO:Set up data.
2023-03-27 10:36:58,598:INFO:Set up index.
2023-03-27 10:37:25,409:INFO:Initializing predict_model()
2023-03-27 10:37:25,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEF6888>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38CA8>)
2023-03-27 10:37:25,417:INFO:Checking exceptions
2023-03-27 10:37:25,417:INFO:Preloading libraries
2023-03-27 10:37:25,417:INFO:Set up data.
2023-03-27 10:37:25,521:INFO:Set up index.
2023-03-27 10:39:24,548:INFO:Initializing predict_model()
2023-03-27 10:39:24,548:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AEF3E88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AFACF78>)
2023-03-27 10:39:24,556:INFO:Checking exceptions
2023-03-27 10:39:24,556:INFO:Preloading libraries
2023-03-27 10:39:24,556:INFO:Set up data.
2023-03-27 10:39:24,620:INFO:Set up index.
2023-03-27 10:39:34,478:INFO:Initializing predict_model()
2023-03-27 10:39:34,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78ABBFF88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF3F9D8>)
2023-03-27 10:39:34,480:INFO:Checking exceptions
2023-03-27 10:39:34,480:INFO:Preloading libraries
2023-03-27 10:39:34,480:INFO:Set up data.
2023-03-27 10:39:34,546:INFO:Set up index.
2023-03-27 10:49:44,897:INFO:Initializing predict_model()
2023-03-27 10:49:44,897:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D789236188>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AECF048>)
2023-03-27 10:49:44,897:INFO:Checking exceptions
2023-03-27 10:49:44,897:INFO:Preloading libraries
2023-03-27 10:49:44,897:INFO:Set up data.
2023-03-27 10:49:44,937:INFO:Set up index.
2023-03-27 10:49:51,432:INFO:Initializing predict_model()
2023-03-27 10:49:51,432:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D788F29E48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38CA8>)
2023-03-27 10:49:51,432:INFO:Checking exceptions
2023-03-27 10:49:51,432:INFO:Preloading libraries
2023-03-27 10:49:51,432:INFO:Set up data.
2023-03-27 10:49:51,537:INFO:Set up index.
2023-03-27 10:50:00,086:INFO:Initializing predict_model()
2023-03-27 10:50:00,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D78AE7B048>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D78AF38CA8>)
2023-03-27 10:50:00,086:INFO:Checking exceptions
2023-03-27 10:50:00,086:INFO:Preloading libraries
2023-03-27 10:50:00,087:INFO:Set up data.
2023-03-27 10:50:00,168:INFO:Set up index.
2023-03-27 11:11:40,016:INFO:Initializing predict_model()
2023-03-27 11:11:40,016:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D789729A88>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001D7FEF259D8>)
2023-03-27 11:11:40,016:INFO:Checking exceptions
2023-03-27 11:11:40,016:INFO:Preloading libraries
2023-03-27 11:11:40,016:INFO:Set up data.
2023-03-27 11:11:40,048:INFO:Set up index.
2023-03-27 12:08:38,022:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 12:08:38,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 12:08:38,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 12:08:38,023:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 12:08:38,865:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-27 12:08:39,117:INFO:Initializing load_model()
2023-03-27 12:08:39,117:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-27 12:08:39,118:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:08:39,119:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:08:39,120:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:08:39,122:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-27 12:08:42,017:INFO:Initializing predict_model()
2023-03-27 12:08:42,017:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023259066CC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A961AF8>)
2023-03-27 12:08:42,017:INFO:Checking exceptions
2023-03-27 12:08:42,017:INFO:Preloading libraries
2023-03-27 12:08:42,017:INFO:Set up data.
2023-03-27 12:08:42,032:INFO:Set up index.
2023-03-27 12:11:13,990:INFO:Initializing predict_model()
2023-03-27 12:11:13,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002325A9A45C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A9D3E58>)
2023-03-27 12:11:13,991:INFO:Checking exceptions
2023-03-27 12:11:13,991:INFO:Preloading libraries
2023-03-27 12:11:13,991:INFO:Set up data.
2023-03-27 12:11:14,039:INFO:Set up index.
2023-03-27 12:40:43,674:INFO:Initializing load_model()
2023-03-27 12:40:43,674:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-27 12:40:43,683:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:40:43,683:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:40:43,684:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 12:40:43,685:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-27 12:42:57,743:INFO:Initializing predict_model()
2023-03-27 12:42:57,743:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023258144AC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000023259075318>)
2023-03-27 12:42:57,744:INFO:Checking exceptions
2023-03-27 12:42:57,744:INFO:Preloading libraries
2023-03-27 12:42:57,745:INFO:Set up data.
2023-03-27 12:42:57,798:INFO:Set up index.
2023-03-27 12:43:35,219:INFO:Initializing predict_model()
2023-03-27 12:43:35,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002325A8E6C48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A8D3C18>)
2023-03-27 12:43:35,220:INFO:Checking exceptions
2023-03-27 12:43:35,220:INFO:Preloading libraries
2023-03-27 12:43:35,221:INFO:Set up data.
2023-03-27 12:43:35,266:INFO:Set up index.
2023-03-27 13:06:13,006:INFO:Initializing predict_model()
2023-03-27 13:06:13,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002325A9C11C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A641D38>)
2023-03-27 13:06:13,006:INFO:Checking exceptions
2023-03-27 13:06:13,006:INFO:Preloading libraries
2023-03-27 13:06:13,006:INFO:Set up data.
2023-03-27 13:06:13,032:INFO:Set up index.
2023-03-27 13:06:55,010:INFO:Initializing predict_model()
2023-03-27 13:06:55,010:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023258E0F0C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A9D3558>)
2023-03-27 13:06:55,010:INFO:Checking exceptions
2023-03-27 13:06:55,010:INFO:Preloading libraries
2023-03-27 13:06:55,010:INFO:Set up data.
2023-03-27 13:06:55,026:INFO:Set up index.
2023-03-27 13:09:22,746:INFO:Initializing predict_model()
2023-03-27 13:09:22,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002325A995E08>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A8EA1F8>)
2023-03-27 13:09:22,746:INFO:Checking exceptions
2023-03-27 13:09:22,746:INFO:Preloading libraries
2023-03-27 13:09:22,747:INFO:Set up data.
2023-03-27 13:09:22,776:INFO:Set up index.
2023-03-27 13:24:06,675:INFO:Initializing load_model()
2023-03-27 13:24:06,676:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-27 13:24:06,677:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 13:24:06,677:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 13:24:06,678:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 13:24:06,679:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-27 13:25:25,241:INFO:Initializing predict_model()
2023-03-27 13:25:25,242:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002325A8E2048>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002325A8EA048>)
2023-03-27 13:25:25,242:INFO:Checking exceptions
2023-03-27 13:25:25,242:INFO:Preloading libraries
2023-03-27 13:25:25,243:INFO:Set up data.
2023-03-27 13:25:25,328:INFO:Set up index.
2023-03-27 18:47:13,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 18:47:13,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 18:47:13,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 18:47:13,207:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-27 18:47:15,329:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-27 18:47:16,055:INFO:Initializing load_model()
2023-03-27 18:47:16,055:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-27 18:47:16,059:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 18:47:16,059:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 18:47:16,059:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-27 18:47:16,063:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-27 18:47:26,834:INFO:Initializing predict_model()
2023-03-27 18:47:26,834:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3A8CEFC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ED61558>)
2023-03-27 18:47:26,834:INFO:Checking exceptions
2023-03-27 18:47:26,834:INFO:Preloading libraries
2023-03-27 18:47:26,834:INFO:Set up data.
2023-03-27 18:47:26,882:INFO:Set up index.
2023-03-27 18:48:00,660:INFO:Initializing predict_model()
2023-03-27 18:48:00,660:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3EA0F208>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EDCB8B8>)
2023-03-27 18:48:00,660:INFO:Checking exceptions
2023-03-27 18:48:00,660:INFO:Preloading libraries
2023-03-27 18:48:00,660:INFO:Set up data.
2023-03-27 18:48:00,700:INFO:Set up index.
2023-03-27 18:48:27,672:INFO:Initializing predict_model()
2023-03-27 18:48:27,672:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3ECAA788>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EDCBB88>)
2023-03-27 18:48:27,672:INFO:Checking exceptions
2023-03-27 18:48:27,672:INFO:Preloading libraries
2023-03-27 18:48:27,679:INFO:Set up data.
2023-03-27 18:48:27,704:INFO:Set up index.
2023-03-27 18:49:08,547:INFO:Initializing predict_model()
2023-03-27 18:49:08,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3ED9CB48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EDCB0D8>)
2023-03-27 18:49:08,547:INFO:Checking exceptions
2023-03-27 18:49:08,547:INFO:Preloading libraries
2023-03-27 18:49:08,547:INFO:Set up data.
2023-03-27 18:49:08,595:INFO:Set up index.
2023-03-27 18:49:36,703:INFO:Initializing predict_model()
2023-03-27 18:49:36,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF32F12E48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ED6B9D8>)
2023-03-27 18:49:36,703:INFO:Checking exceptions
2023-03-27 18:49:36,703:INFO:Preloading libraries
2023-03-27 18:49:36,703:INFO:Set up data.
2023-03-27 18:49:36,767:INFO:Set up index.
2023-03-27 18:50:07,741:INFO:Initializing predict_model()
2023-03-27 18:50:07,741:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3EDFD9C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ECAB948>)
2023-03-27 18:50:07,741:INFO:Checking exceptions
2023-03-27 18:50:07,741:INFO:Preloading libraries
2023-03-27 18:50:07,749:INFO:Set up data.
2023-03-27 18:50:07,789:INFO:Set up index.
2023-03-27 18:54:19,509:INFO:Initializing predict_model()
2023-03-27 18:54:19,509:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF34A69CC8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ECD4048>)
2023-03-27 18:54:19,509:INFO:Checking exceptions
2023-03-27 18:54:19,509:INFO:Preloading libraries
2023-03-27 18:54:19,509:INFO:Set up data.
2023-03-27 18:54:19,549:INFO:Set up index.
2023-03-27 18:54:51,201:INFO:Initializing predict_model()
2023-03-27 18:54:51,201:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3EDE6B48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ED63708>)
2023-03-27 18:54:51,201:INFO:Checking exceptions
2023-03-27 18:54:51,201:INFO:Preloading libraries
2023-03-27 18:54:51,201:INFO:Set up data.
2023-03-27 18:54:51,241:INFO:Set up index.
2023-03-27 18:56:07,858:INFO:Initializing predict_model()
2023-03-27 18:56:07,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3D71B588>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EDCB288>)
2023-03-27 18:56:07,858:INFO:Checking exceptions
2023-03-27 18:56:07,858:INFO:Preloading libraries
2023-03-27 18:56:07,858:INFO:Set up data.
2023-03-27 18:56:07,907:INFO:Set up index.
2023-03-27 18:56:42,644:INFO:Initializing predict_model()
2023-03-27 18:56:42,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF32F15288>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EE1A0D8>)
2023-03-27 18:56:42,652:INFO:Checking exceptions
2023-03-27 18:56:42,652:INFO:Preloading libraries
2023-03-27 18:56:42,652:INFO:Set up data.
2023-03-27 18:56:42,693:INFO:Set up index.
2023-03-27 18:56:59,263:INFO:Initializing predict_model()
2023-03-27 18:56:59,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF34A69148>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ED854C8>)
2023-03-27 18:56:59,263:INFO:Checking exceptions
2023-03-27 18:56:59,263:INFO:Preloading libraries
2023-03-27 18:56:59,263:INFO:Set up data.
2023-03-27 18:56:59,303:INFO:Set up index.
2023-03-27 18:57:41,276:INFO:Initializing predict_model()
2023-03-27 18:57:41,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3E98E188>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3EDCBE58>)
2023-03-27 18:57:41,276:INFO:Checking exceptions
2023-03-27 18:57:41,276:INFO:Preloading libraries
2023-03-27 18:57:41,276:INFO:Set up data.
2023-03-27 18:57:41,321:INFO:Set up index.
2023-03-27 18:58:05,237:INFO:Initializing predict_model()
2023-03-27 18:58:05,237:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3EA0F748>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ECCE708>)
2023-03-27 18:58:05,237:INFO:Checking exceptions
2023-03-27 18:58:05,237:INFO:Preloading libraries
2023-03-27 18:58:05,243:INFO:Set up data.
2023-03-27 18:58:05,295:INFO:Set up index.
2023-03-27 19:02:34,648:INFO:Initializing predict_model()
2023-03-27 19:02:34,648:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3EDE6688>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ED771F8>)
2023-03-27 19:02:34,648:INFO:Checking exceptions
2023-03-27 19:02:34,648:INFO:Preloading libraries
2023-03-27 19:02:34,648:INFO:Set up data.
2023-03-27 19:02:34,693:INFO:Set up index.
2023-03-27 19:02:51,114:INFO:Initializing predict_model()
2023-03-27 19:02:51,114:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DF3ECE57C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000001DF3ECC58B8>)
2023-03-27 19:02:51,114:INFO:Checking exceptions
2023-03-27 19:02:51,114:INFO:Preloading libraries
2023-03-27 19:02:51,114:INFO:Set up data.
2023-03-27 19:02:51,177:INFO:Set up index.
2023-03-29 10:09:44,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-29 10:09:44,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-29 10:09:44,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-29 10:09:44,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-03-29 10:09:45,552:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-03-29 10:09:45,782:INFO:Initializing load_model()
2023-03-29 10:09:45,782:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-29 10:09:45,788:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:09:45,789:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:09:45,789:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:09:45,791:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-29 10:17:55,917:INFO:Initializing predict_model()
2023-03-29 10:17:55,917:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002847229A688>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028472302AF8>)
2023-03-29 10:17:55,917:INFO:Checking exceptions
2023-03-29 10:17:55,917:INFO:Preloading libraries
2023-03-29 10:17:55,917:INFO:Set up data.
2023-03-29 10:17:55,956:INFO:Set up index.
2023-03-29 10:19:57,383:INFO:Initializing predict_model()
2023-03-29 10:19:57,384:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028472357748>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028472366B88>)
2023-03-29 10:19:57,384:INFO:Checking exceptions
2023-03-29 10:19:57,384:INFO:Preloading libraries
2023-03-29 10:19:57,384:INFO:Set up data.
2023-03-29 10:19:57,399:INFO:Set up index.
2023-03-29 10:21:15,349:INFO:Initializing predict_model()
2023-03-29 10:21:15,349:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000284722705C8>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028470A01708>)
2023-03-29 10:21:15,350:INFO:Checking exceptions
2023-03-29 10:21:15,350:INFO:Preloading libraries
2023-03-29 10:21:15,350:INFO:Set up data.
2023-03-29 10:21:15,367:INFO:Set up index.
2023-03-29 10:22:31,753:INFO:Initializing predict_model()
2023-03-29 10:22:31,753:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028471F4E688>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002847237AEE8>)
2023-03-29 10:22:31,754:INFO:Checking exceptions
2023-03-29 10:22:31,754:INFO:Preloading libraries
2023-03-29 10:22:31,754:INFO:Set up data.
2023-03-29 10:22:31,767:INFO:Set up index.
2023-03-29 10:25:40,773:INFO:Initializing predict_model()
2023-03-29 10:25:40,773:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028472270208>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028472366438>)
2023-03-29 10:25:40,773:INFO:Checking exceptions
2023-03-29 10:25:40,773:INFO:Preloading libraries
2023-03-29 10:25:40,773:INFO:Set up data.
2023-03-29 10:25:40,799:INFO:Set up index.
2023-03-29 10:27:14,547:INFO:Initializing predict_model()
2023-03-29 10:27:14,547:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028472367F48>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000284722DA048>)
2023-03-29 10:27:14,547:INFO:Checking exceptions
2023-03-29 10:27:14,547:INFO:Preloading libraries
2023-03-29 10:27:14,547:INFO:Set up data.
2023-03-29 10:27:14,565:INFO:Set up index.
2023-03-29 10:30:58,559:INFO:Initializing predict_model()
2023-03-29 10:30:58,559:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000284720D1848>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x000002847227A948>)
2023-03-29 10:30:58,559:INFO:Checking exceptions
2023-03-29 10:30:58,559:INFO:Preloading libraries
2023-03-29 10:30:58,559:INFO:Set up data.
2023-03-29 10:30:58,574:INFO:Set up index.
2023-03-29 10:57:53,206:INFO:Initializing load_model()
2023-03-29 10:57:53,206:INFO:load_model(model_name=saved_lr_model, platform=None, authentication=None, verbose=True)
2023-03-29 10:57:53,212:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LabelEncoder from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:57:53,214:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:57:53,215:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\sklearn\base.py:338: UserWarning: Trying to unpickle estimator LogisticRegression from version 1.2.2 when using version 1.0.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/modules/model_persistence.html#security-maintainability-limitations
  UserWarning,

2023-03-29 10:57:53,215:WARNING:c:\Users\bloke\anaconda3\envs\dmeModel\lib\site-packages\pycaret\internal\pipeline.py:137: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '22.2.2', 'setuptools': '63.4.1', 'pycaret': '3.0.0', 'IPython': '7.31.1', 'ipywidgets': '7.6.5', 'tqdm': '4.64.1', 'numpy': '1.21.5', 'pandas': '1.3.5', 'jinja2': '2.11.3', 'scipy': '1.7.3', 'joblib': '1.2.0', 'sklearn': '1.0.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.55.1', 'requests': '2.28.1', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'kaleido': '0.2.1', 'statsmodels': '0.13.2', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.0'}, 'python': {'version': '3.7.13', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '22.0.4', 'setuptools': '63.4.3', 'pycaret': '3.0.0', 'IPython': '7.9.0', 'ipywidgets': '7.7.1', 'tqdm': '4.65.0', 'numpy': '1.22.4', 'pandas': '1.4.4', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.2.0', 'sklearn': '1.2.2', 'pyod': '1.0.9', 'imblearn': '0.10.1', 'category_encoders': '2.6.0', 'lightgbm': '3.3.5', 'numba': '0.56.4', 'requests': '2.27.1', 'matplotlib': '3.7.1', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.13.1', 'kaleido': '0.2.1', 'statsmodels': '0.13.5', 'sktime': '0.16.1', 'tbats': '1.1.2', 'pmdarima': '2.0.3', 'psutil': '5.9.4'}, 'python': {'version': '3.9.16', 'machine': 'x86_64'}}
  self._pycaret_versions, pickle_versions

2023-03-29 11:00:53,011:INFO:Initializing predict_model()
2023-03-29 11:00:53,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000284723E2488>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000284723663A8>)
2023-03-29 11:00:53,011:INFO:Checking exceptions
2023-03-29 11:00:53,011:INFO:Preloading libraries
2023-03-29 11:00:53,011:INFO:Set up data.
2023-03-29 11:00:53,028:INFO:Set up index.
2023-03-29 11:03:41,101:INFO:Initializing predict_model()
2023-03-29 11:03:41,102:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002847229A648>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028472366948>)
2023-03-29 11:03:41,102:INFO:Checking exceptions
2023-03-29 11:03:41,102:INFO:Preloading libraries
2023-03-29 11:03:41,102:INFO:Set up data.
2023-03-29 11:03:41,118:INFO:Set up index.
2023-03-29 11:04:33,074:INFO:Initializing predict_model()
2023-03-29 11:04:33,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000284723D3188>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x00000284723661F8>)
2023-03-29 11:04:33,075:INFO:Checking exceptions
2023-03-29 11:04:33,075:INFO:Preloading libraries
2023-03-29 11:04:33,075:INFO:Set up data.
2023-03-29 11:04:33,092:INFO:Set up index.
2023-03-29 11:07:00,382:INFO:Initializing predict_model()
2023-03-29 11:07:00,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000284723DA548>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028471FD8B88>)
2023-03-29 11:07:00,382:INFO:Checking exceptions
2023-03-29 11:07:00,382:INFO:Preloading libraries
2023-03-29 11:07:00,383:INFO:Set up data.
2023-03-29 11:07:00,399:INFO:Set up index.
2023-03-29 11:07:47,519:INFO:Initializing predict_model()
2023-03-29 11:07:47,519:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002847228A608>, estimator=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['sweating', 'rusty_sputum',
                                             'high_fever', 'indigestion',
                                             'red_spots_over_body',
                                             'puffy_face_and_eyes',
                                             'hip_joint_pain',
                                             'swelling_joints',
                                             'foul_smell_ofurine', 'phlegm',
                                             'weigh...
                                             'muscle_wasting', 'bloody_stool',
                                             'chills', ...],
                                    transformer=SimpleImputer(verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x0000028472366D38>)
2023-03-29 11:07:47,519:INFO:Checking exceptions
2023-03-29 11:07:47,519:INFO:Preloading libraries
2023-03-29 11:07:47,520:INFO:Set up data.
2023-03-29 11:07:47,541:INFO:Set up index.
